# Docker Compose file for the UPS Server application
# Version: '3.8' specifies the file format version.
# version: '3.8'

services:
  # Define our main service, which we'll call 'ups-server'
  ups-server:
    # 'build: .' tells Docker Compose to build the image from the
    # Dockerfile in the current directory.
    build: .
    # Name the container for easy identification.
    container_name: ups-server
    # Set the restart policy. 'unless-stopped' means it will automatically
    # restart if it crashes, unless you manually stop it.
    restart: unless-stopped
     # Use the host's network stack directly.
     # this is necessary for the WoL (wake on lan) to work.
    network_mode: host 

    environment:
      # Set the timezone for the container from the .env file.
      # It defaults to UTC if the variable is not set.
      # Users should copy .env.example to .env and set their timezone.
      - TZ=${TZ:-UTC}      
      # Pass the host's IP address from the .env file to the container.
      # This is required for the API to function correctly.
      - UPS_SERVER_HOST_IP=${UPS_SERVER_HOST_IP}
    
    # ports:
      # Map the container's ports to the host machine's ports.
      # Format is "HOST:CONTAINER"

      # - Expose the NUT server on port 3493.
      # This nees to be disabled if you used the network_mode: host option.
      # - "3493:3493"
      # - Expose the UPS Hub API on port 5000.
      # This nees to be disabled if you used the network_mode: host option.
      # - "5000:5000"
      
    volumes:
      # Mount local directories into the container for persistent data
      # and easy configuration changes.
      # Format is "HOST_PATH:CONTAINER_PATH"
      #
      # Mount the local './config' directory to '/etc/nut' inside the container.
      # This makes all your NUT configs, plus upshub.conf and power_manager.conf,
      # live-editable from the host.
      
      # Mount the local './config/nut' directory to '/etc/nut' inside the container.
      - ./config:/etc/nut

      # Mount the log rotation configuration
      - ./logrotate/power-manager-logrotate:/etc/logrotate.d/power-manager-logrotate

      # --- Custom Syslog Forwarding ---
      # To enable forwarding syslog messages, copy the example file
      # 'rsyslog/custom.conf.example' to 'rsyslog/custom.conf' and
      # edit it with your server details. The container will automatically
      # pick it up on restart.
      - ./rsyslog/custom.conf:/etc/rsyslog.d/custom.conf      
      
      # (Optional) Mount a volume for persistent logs. This is good practice.
      # It will create a 'logs' directory on your host machine.
      - ./logs:/var/log
